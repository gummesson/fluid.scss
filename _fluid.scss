//==============
//  fluid.scss
//==============

// Import the fallback values
@import "defaults";

// `x` is used as a variable name for the classes/placeholder selectors
// since it's short.
$x: unquote(".")!default;

@if ($use-classes == false) {
  $x: unquote("%");
}

// Helper mixins
@mixin fluid-hidden() {
  visibility: hidden;
  display: none;
}

@mixin fluid-visible() {
  visibility: visible;
  display: block;
}

// Generates the widths
//
// Change it at your own risk!
@mixin fluid-widths($name, $widths, $helper) {
  $breakpoint-found: false;

  // If the name of the breakpoint is `default`, just generate the widths
  // without a specific breakpoint name (ie: `.one-whole`).
  @if ($name == "default") {
    $breakpoint-found: true;

    @each $width in $widths {
      $width-name: nth($width, 1);
      $width-size: nth($width, 2);

      #{$x}#{$width-name} {
        width: #{$width-size};
      }
    }
  }

  // In all other cases, generate the widths with the breakpoint name in
  // question in front of them (ie: `.palm--one-whole`).
  @else {
    @each $breakpoint in $breakpoints {
      $breakpoint-name: nth($breakpoint, 1);
      $breakpoint-size: nth($breakpoint, 2);

    // If the breakpoint matches an actual one in the `$breakpoints` variable,
    // generate the media query.
      @if ($name == $breakpoint-name) {
        $breakpoint-found: true;

        @media only screen and #{$breakpoint-size} {
          @each $width in $widths {
            $width-name: nth($width, 1);
            $width-size: nth($width, 2);

            #{$x}#{$breakpoint-name}--#{$width-name} {
              width: #{$width-size};
            }
          }

          // Generates the helper classes (ie: `hidden`, `visible` or `both`)
          // if they"re enabled.
          @if ($helper == "hidden") {
            #{$x}#{$breakpoint-name}--hidden {
              @include fluid-hidden();
            }
          }

          @else if ($helper == "visible") {
            #{$x}#{$breakpoint-name}--visible {
              @include fluid-visible();
            }
          }

          @else if ($helper == "both") {
            #{$x}#{$breakpoint-name}--hidden {
              @include fluid-hidden();
            }

            #{$x}#{$breakpoint-name}--visible {
              @include fluid-visible();
            }
          }
        }
      }
    }
  }

  @if ($breakpoint-found == false) {
    @warn "Unrecognized breakpoint: #{$name}";
  }
}

// Generates the breakpoints
//
// Change it at your own risk!
@mixin fluid-point($name) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $breakpoint-name: nth($breakpoint, 1);
    $breakpoint-size: nth($breakpoint, 2);

    // If the breakpoint matches an actual one in the `$breakpoints` variable,
    // generate the media query.
    @if ($name == $breakpoint-name) {
      $breakpoint-found: true;

      @media only screen and #{$breakpoint-size} {
        @content;
      }
    }
  }

  @if ($breakpoint-found == false) {
    @warn "Unrecognized breakpoint: #{$name}";
  }
}
