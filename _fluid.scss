//==============
//  fluid.scss
//==============

// Import the fallback values
@import "defaults";

// `x` is used as a variable name for the classes/placeholder selectors
// since it's short.
$x: unquote(".");

@if ($use-classes == false) {
  $x: unquote("%");
}

// Helper mixins
@mixin fluid-hidden() {
  visibility: hidden;
  display: none;
}

@mixin fluid-visible() {
  visibility: visible;
  display: block;
}

// Generate the widths
//
// Change it at your own risk!
@mixin fluid-widths($breakpoint, $widths, $helpers) {
  $found: false;
  // If the name of the breakpoint is `default`, just generate the widths
  // without a specific breakpoint name (ie: `.one-whole`).
  @if ($breakpoint == "default") {
    $found: true;
    @each $name, $width in $widths {
      #{$x}#{$name} {
        width: $width;
      }
    }
  // In all other cases, generate the widths with the breakpoint name in
  // question in front of them (ie: `.lap--one-whole`).
  } @else {
    @each $name, $size in $breakpoints {
    // If the breakpoint matches an actual one in the `$breakpoints` variable,
    // generate the media query.
      @if ($name == $breakpoint) {
        $found: true;
        @media screen and #{$size} {
          @each $name, $width in $widths {
            #{$x}#{$breakpoint}--#{$name} {
              width: $width;
            }
          }
          // Generate the helper classes (ie: `hidden`, `visible` or `both`)
          // if they're enabled.
          @if ($helpers == "hidden") {
            #{$x}#{$name}--hidden {
              @include fluid-hidden();
            }
          } @else if ($helpers == "visible") {
            #{$x}#{$name}--visible {
              @include fluid-visible();
            }
          } @else if ($helpers == "both") {
            #{$x}#{$name}--hidden {
              @include fluid-hidden();
            }
            #{$x}#{$name}--visible {
              @include fluid-visible();
            }
          }
        }
      }
    }
  }
  @if ($found == false) {
    @warn "Unrecognized breakpoint: #{$breakpoint}";
  }
}

// Generate the breakpoints
//
// Change it at your own risk!
@mixin fluid-point($breakpoint) {
  $found: false;
  @each $name, $size in $breakpoints {
    // If the breakpoint matches an actual one in the `$breakpoints` variable,
    // generate the media query.
    @if ($name == $breakpoint) {
      $found: true;
      @media screen and #{$size} {
        @content;
      }
    }
  }
  @if ($found == false) {
    @warn "Unrecognized breakpoint: #{$breakpoint}";
  }
}
